/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */
import { subscribeToArray } from "./subscribeToArray.js";
import { subscribeToPromise } from "./subscribeToPromise.js";
import { subscribeToIterable } from "./subscribeToIterable.js";
import { subscribeToObservable } from "./subscribeToObservable.js";
import { isArrayLike } from "./isArrayLike.js";
import { isPromise } from "./isPromise.js";
import { isObject } from "./isObject.js";
import { iterator as Symbol_iterator } from "../symbol/iterator.js";
import { observable as Symbol_observable } from "../symbol/observable.js";
export var subscribeTo = function (result) {
  if (!!result && typeof result[Symbol_observable] === 'function') {
    return subscribeToObservable(result);
  } else if (isArrayLike(result)) {
    return subscribeToArray(result);
  } else if (isPromise(result)) {
    return subscribeToPromise(result);
  } else if (!!result && typeof result[Symbol_iterator] === 'function') {
    return subscribeToIterable(result);
  } else {
    var value = isObject(result) ? 'an invalid object' : "'" + result + "'";
    var msg = "You provided " + value + " where a stream was expected." + ' You can provide an Observable, Promise, Array, or Iterable.';
    throw new TypeError(msg);
  }
}; //# sourceMappingURL=subscribeTo.js.map